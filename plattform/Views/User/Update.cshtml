@model plattform.users_tbl

@{
    ViewBag.Title = "Update";
}

<h1>Mathe Nachhilfe Plattform</h1>
<h2> Welcome cher User </h2>
<!DOCTYPE html>
<html>
<head>
    <title>Profil Update</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <style>
        {
            padding: 0; 
            margin: 0;
            box-sizing: border-box;
        }

        #button {
            height: 30;
            width: 30;
        }

        body {
            font-family: 'Poppins', sans-serif;
        }

        .wave {
            position: fixed;
            height: 100%;
            left: 0;
            bottom: 0;
            z-index: 1;
        }

        .container {
            width: 50;
            height: 50;
            padding: 0 2rem;
        }

        .login-container {
            position: absolute;
            left: 18%;
            top: 10%;
            padding: 10px 10px
        }

        .img {
            display: flex;
            justify-content: flex-end;
            align-items: center;
        }

            .img img {
                width: 500px;
            }

        .login-container {
            display: flex;
            align-items: center;
            text-align: center;
        }

        form {
            width: 360px;
        }

        .avatar {
            width: 100px;
        }

        form h2 {
            font-size: 2.9rem;
            text-transform: uppercase;
            margin: 15px 0;
            color: #333;
        }

        h1 {
            font-size: 2.9rem;
            text-transform: uppercase;
            margin: 15px 0;
            color: #333;
        }

        .input-div {
            position: relative;
            display: grid;
            grid-template-columns: 7% 93%;
            margin: 25px 0;
            padding: 5px 0;
            border-bottom: 2px solid #d9d9d9;
        }

        .field-validation-error {
            color: red;
        }

        .input-div:after, .input-div:before {
            content: '';
            position: absolute;
            bottom: -2px;
            width: 0%;
            height: 2px;
            background-color: #38d39f;
        }

        .input-div:after {
            right: 50%;
        }

        .input-div:before {
            left: 50%;
        }

        .input-div.focus .i i {
            color: #38d39f;
        }

        .input-div.focus div h5 {
            top: -5px;
            font-size: 15px;
        }

        .input-div.focus:after, .input-div.focus:before {
            width: 50%;
        }

        .input-div.one {
            margin-top: 0;
        }

        .input-div.two {
            margin-bottom: 4px;
        }

        .i {
            display: flex;
            justify-content: center;
            align-items: center;
        }

            .i i {
                color: #d9d9d9;
            }

        .input-div > div {
            position: relative;
            height: 45px;
        }

            .input-div > div h5 {
                position: absolute;
                left: 10px;
                top: 50%;
                transform: translateY(-50%);
                color: #999;
                font-size: 18px;
                display: none;
                transition: .3s;
            }

        .input {
            position: absolute;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            border: none;
            outline: none;
            background: none;
            padding: 0.5rem 0.7rem;
            font-size: 1.2rem;
            color: #555;
        }



        a:hover {
            color: #38d39f;
        }

        .btn {
            display: block;
            width: 100%;
            height: 50px;
            border-radius: 25px;
            margin: 1rem 0;
            font-size: 1.2rem;
            outline: none;
            border: none;
            background-image: linear-gradient(to right, #32be8f,#38d39f,#32be8f);
            cursor: pointer;
            color: #fff;
            text-transform: uppercase;
            font-family: 'Poppins',sans-serif;
            background-size: 200%;
            transition: .5s;
        }

            .btn:hover {
                background-position: right;
            }
    </style>


</head>
<body>

    <div class="container">
        <div class="img">

            <img src="~/image/undraw_Work_time_re_hdyv.svg" />
        </div>
    </div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>users_tbl</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.id)

            <div class="form-group">
                @Html.LabelFor(model => model.vorname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.vorname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.vorname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.nachname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.nachname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.nachname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.adresse, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.adresse, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.adresse, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.mobile, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.mobile, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.mobile, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.passeword, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.passeword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.passeword, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Home","afterLogin", "User")
    </div>
    </body>
</html>